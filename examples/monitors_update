#!/usr/bin/python3
#-*-python-*-##################################################################
# Copyright 2021-2022 Inesonic, LLC
# All Rights Reserved
###############################################################################

"""
Python command-line tool to test and demonstrate the /v1/monitors/update
endpoint and associated Python API functions.

"""

###############################################################################
# Import:
#

import sys
import argparse
import json
import yaml

import speedsentry

###############################################################################
# Globals:
#

VERSION = "1a"
"""
The tool version number.

"""

DESCRIPTION = """
Copyright 2021-2022 Inesonic, LLC

You can use this small command line tool to demonstrate the
/v1/monitors/update REST API endpoint.

"""

###############################################################################
# Main:
#

command_line_parser = argparse.ArgumentParser(description = DESCRIPTION)

command_line_parser.add_argument(
    "-v",
    "--version",
    action = 'version',
    version = VERSION
)

command_line_parser.add_argument(
    "-i",
    "--id",
    help = "You can use this switch to specify the customer identifier.",
    type = str,
    dest = 'customer_identifier'
)

command_line_parser.add_argument(
    "-s",
    "--secret",
    help = "You can use this switch to specify the customer secret.  "
           "The provided secret should be base-64 encoded.",
    type = str,
    dest = 'customer_secret'
)

command_line_parser.add_argument(
    "-u",
    "--update-file",
    help = "You can use this switch to specify the update filename.",
    type = str,
    dest = 'update_filename'
)

arguments = command_line_parser.parse_args()
customer_identifier = arguments.customer_identifier
customer_secret = arguments.customer_secret
update_filename = arguments.update_filename

with open(update_filename, 'r') as fh:
    update_content = fh.read()

# Python has several different and incompatible versions of the YAML parser
# for this reason we try several approaches.

try:
    monitor_updates = yaml.load(update_content, Loader = yaml.FullLoader)
except Exception as e1:
    try:
        file_configuration = yaml.load(update_content)
    except Exception as e2:
        sys.stderr.write(
            "*** Could not parse update file \"%s\":\n"
            "Pass 1:\n"
            "%s\n"
            "Pass 2:\n"
            "%s\n"%(
                update_filename,
                str(e1),
                str(e2)
            )
        )
        exit(1)

api = speedsentry.SpeedSentry(
    customer_identifier = customer_identifier,
    customer_secret = customer_secret
)

api.monitors_update(monitor_data = monitor_updates)
