#!/usr/bin/python3
#-*-python-*-##################################################################
# Copyright 2021-2022 Inesonic, LLC
# All Rights Reserved
###############################################################################

"""
Python command-line tool to test and demonstrate the /v1/monitors/list endpoint
and associated Python API functions.

"""

###############################################################################
# Import:
#

import sys
import argparse
import json

import speedsentry

###############################################################################
# Globals:
#

VERSION = "1a"
"""
The tool version number.

"""

DESCRIPTION = """
Copyright 2021-2022 Inesonic, LLC

You can use this small command line tool to demonstrate the
/v1/monitors/list REST API endpoint.

"""

###############################################################################
# Main:
#

command_line_parser = argparse.ArgumentParser(description = DESCRIPTION)

command_line_parser.add_argument(
    "-v",
    "--version",
    action = 'version',
    version = VERSION
)

command_line_parser.add_argument(
    "-i",
    "--id",
    help = "You can use this switch to specify the customer identifier.",
    type = str,
    dest = 'customer_identifier'
)

command_line_parser.add_argument(
    "-s",
    "--secret",
    help = "You can use this switch to specify the customer secret.  "
           "The provided secret should be base-64 encoded.",
    type = str,
    dest = 'customer_secret'
)

command_line_parser.add_argument(
    "-m",
    "--monitor-id",
    help = "You can use this switch to specify ordering by monitor ID.",
    action = "store_true",
    default = False,
    dest = 'monitor_id'
)

command_line_parser.add_argument(
    "-o",
    "--user-ordering",
    help = "You can use this switch to specify ordering by user ordering.",
    action = "store_true",
    default = False,
    dest = 'user_ordering'
)

command_line_parser.add_argument(
    "-u",
    "--url",
    help = "You can use this switch to specify ordering by URL.",
    action = "store_true",
    default = False,
    dest = 'url'
)

arguments = command_line_parser.parse_args()
customer_identifier = arguments.customer_identifier
customer_secret = arguments.customer_secret
monitor_id = arguments.monitor_id
user_ordering = arguments.user_ordering
url = arguments.url

if not monitor_id and not user_ordering and not url:
    order_by = "monitor_id"
elif monitor_id and not user_ordering and not url:
    order_by = "monitor_id"
elif not monitor_id and user_ordering and not url:
    order_by = "user_ordering"
elif not monitor_id and not user_ordering and url:
    order_by = "url"
else:
    sys.stdout.write(
        "*** Conflicting switch values.\n"
    )

api = speedsentry.SpeedSentry(
    customer_identifier = customer_identifier,
    customer_secret = customer_secret
)

monitors_data = api.monitors_list(order_by = order_by)
print(json.dumps(monitors_data, indent = 4, default = lambda x : str(x)))
